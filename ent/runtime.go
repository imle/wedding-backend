// Code generated by entc, DO NOT EDIT.

package ent

import (
	"wedding/ent/backroomuser"
	"wedding/ent/invitee"
	"wedding/ent/inviteeparty"
	"wedding/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	backroomuserFields := schema.BackroomUser{}.Fields()
	_ = backroomuserFields
	// backroomuserDescUsername is the schema descriptor for username field.
	backroomuserDescUsername := backroomuserFields[0].Descriptor()
	// backroomuser.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	backroomuser.UsernameValidator = func() func(string) error {
		validators := backroomuserDescUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// backroomuserDescPassword is the schema descriptor for password field.
	backroomuserDescPassword := backroomuserFields[1].Descriptor()
	// backroomuser.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	backroomuser.PasswordValidator = backroomuserDescPassword.Validators[0].(func(string) error)
	inviteeFields := schema.Invitee{}.Fields()
	_ = inviteeFields
	// inviteeDescName is the schema descriptor for name field.
	inviteeDescName := inviteeFields[0].Descriptor()
	// invitee.NameValidator is a validator for the "name" field. It is called by the builders before save.
	invitee.NameValidator = inviteeDescName.Validators[0].(func(string) error)
	inviteepartyFields := schema.InviteeParty{}.Fields()
	_ = inviteepartyFields
	// inviteepartyDescName is the schema descriptor for name field.
	inviteepartyDescName := inviteepartyFields[0].Descriptor()
	// inviteeparty.NameValidator is a validator for the "name" field. It is called by the builders before save.
	inviteeparty.NameValidator = inviteepartyDescName.Validators[0].(func(string) error)
	// inviteepartyDescCode is the schema descriptor for code field.
	inviteepartyDescCode := inviteepartyFields[1].Descriptor()
	// inviteeparty.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	inviteeparty.CodeValidator = func() func(string) error {
		validators := inviteepartyDescCode.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(code string) error {
			for _, fn := range fns {
				if err := fn(code); err != nil {
					return err
				}
			}
			return nil
		}
	}()
}
