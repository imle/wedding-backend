// Code generated by entc, DO NOT EDIT.

package invitee

const (
	// Label holds the string label denoting the invitee type in the database.
	Label = "invitee"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeParty holds the string denoting the party edge name in mutations.
	EdgeParty = "party"

	// Table holds the table name of the invitee in the database.
	Table = "invitees"
	// PartyTable is the table the holds the party relation/edge.
	PartyTable = "invitees"
	// PartyInverseTable is the table name for the InviteeParty entity.
	// It exists in this package in order to avoid circular dependency with the "inviteeparty" package.
	PartyInverseTable = "invitee_parties"
	// PartyColumn is the table column denoting the party relation/edge.
	PartyColumn = "invitee_party_invitees"
)

// Columns holds all SQL columns for invitee fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Invitee type.
var ForeignKeys = []string{
	"invitee_party_invitees",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
