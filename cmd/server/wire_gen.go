// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"context"
	"net/http"
	"wedding/pkg/apiv1"
	"wedding/pkg/database"
	"wedding/pkg/health"
	"wedding/pkg/server"
)

import (
	_ "github.com/lib/pq"
)

// Injectors from wire.go:

func InitializeServer(contextContext context.Context) (*http.Server, func(), error) {
	config := ProvideServerConfig()
	monitor := health.NewMonitor()
	entConfig, err := ProvideEntConfig()
	if err != nil {
		return nil, nil, err
	}
	client, cleanup, err := database.ProvideEntClient(entConfig, monitor)
	if err != nil {
		return nil, nil, err
	}
	rsvp := apiv1.NewRSVP(client)
	engine, err := server.ProvideEngine(config, monitor, rsvp)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	httpServer := server.ProvideHttpServer(engine, config)
	return httpServer, func() {
		cleanup()
	}, nil
}
